{"version":3,"file":"static/js/456.86531c9f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/Components/ContactForm/ContactForm.module.css?5c1e","Components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/Components/ContactList/ContactList.module.css?edd1","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","webpack://react-homework-template/./src/Components/ContactItem/ContactItem.module.css?8271","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/Components/Filter/Filter.module.css?3b56","Components/Filter/Filter.jsx","Pages/Phonebook/Phonebook.styled.js","Pages/Phonebook/Phonebook.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__GeXgg\",\"contactLabel\":\"ContactForm_contactLabel__8oZb-\",\"contactButton\":\"ContactForm_contactButton__3Loxo\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Button } from 'Components/Button/Button';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newName = evt.target.elements.name.value;\n    const newNumber = evt.target.elements.number.value;\n    const isSameContact = contacts.find(\n      ({ name, number }) =>\n        name.toLowerCase().trim() === newName.toLowerCase().trim() ||\n        number === newNumber\n    );\n    if (isSameContact) {\n      evt.target.reset();\n      return alert(`${newName} is already in contacts`);\n    }\n    dispatch(\n      addContacts({\n        name: newName,\n        number: newNumber,\n      })\n    );\n    evt.target.reset();\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.contactLabel}>\n        {' '}\n        Name\n        <input\n          className={css.contactInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.contactLabel}>\n        Number\n        <input\n          className={css.contactInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__HaWTa\",\"contactItem\":\"ContactList_contactItem__kuB4F\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = store => store.contacts.contacts;\n\nexport const getFilter = store => store.filter.value;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactButton\":\"ContactItem_contactButton__QvlPi\"};","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(contact.id));\n  return (\n    <>\n      <p className={css.contactText}>\n        {contact.name}: {contact.number}\n      </p>\n      <button className={css.contactButton} onClick={handleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n","import css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/filter/selectors';\nimport { ContactItem } from 'Components/ContactItem/ContactItem';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.contactList}>\n      {visibleContacts.map(contact => (\n        <li className={css.contactItem} key={contact.id}>\n          <ContactItem contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__eHlYC\",\"filterInput\":\"Filter_filterInput__487ZD\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 50px 0;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 25px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 25px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport ContactForm from '../../Components/ContactForm/ContactForm';\nimport { ContactList } from '../../Components/ContactList/ContactList';\nimport Filter from '../../Components/Filter/Filter';\nimport { Container } from 'Components/Container.styled';\nimport { Section, SubTitle, Title } from './Phonebook.styled';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <SubTitle>Contacts</SubTitle>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {!isLoading && error && <b>Something went wrong...</b>}\n        <ContactList />\n      </Container>\n    </Section>\n  );\n}\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getError","error","dispatch","useDispatch","useSelector","className","css","onSubmit","evt","preventDefault","newName","target","elements","name","value","newNumber","number","find","toLowerCase","trim","reset","alert","addContacts","type","pattern","title","required","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectVisibleContacts","store","filter","includes","ContactItem","contact","onClick","deleteContacts","id","ContactList","visibleContacts","onChange","setFilter","Section","styled","Title","SubTitle","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}