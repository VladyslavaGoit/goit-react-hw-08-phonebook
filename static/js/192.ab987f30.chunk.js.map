{"version":3,"file":"static/js/192.ab987f30.chunk.js","mappings":"+RAKaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wGAMVE,EAAQF,EAAAA,GAAAA,MAAH,6gBAMP,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IAIC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,aAAnB,IACU,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAES,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAGb,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAAnB,IACa,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,UAAnB,IAKxBC,EAAOX,EAAAA,GAAAA,EAAH,4CAIJY,GAAaZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,0FACZ,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,UAAnB,IAMCC,GAAcf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,2DACb,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOY,YAAnB,IAICC,GAAYlB,EAAAA,EAAAA,IAAOmB,EAAAA,IAAPnB,CAAH,uE,mBClChBoB,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KACJE,MAAM,mDACNC,QACC,mDACA,iIAEDC,SAAS,wBACZC,SAAUL,EAAAA,KACPM,IAAI,EAAG,2CACPC,IAAI,KACJH,SAAS,6BAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,SAAC,KAAD,CACEC,cAAe,CACbT,MAAO,GACPG,SAAU,IAEZO,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,IAbJ,SAAC,EAAqBA,GAAa,IAAhCb,EAA+B,EAA/BA,MAAOG,EAAwB,EAAxBA,SAC7BU,EAAQC,YACRP,GAASQ,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOG,SAAAA,IACzB,CAWOa,CAAaJ,EAAQC,EACtB,EARH,UAUE,UAACrC,EAAD,YACE,UAACG,EAAD,WAAO,SAEL,SAAC,KAAD,CAAOsC,KAAK,QAAQC,KAAK,WACzB,SAAC1B,EAAD,CAAa0B,KAAK,QAAQC,UAAU,YAEtC,UAACxC,EAAD,WAAO,YAEL,SAAC,KAAD,CAAOsC,KAAK,WAAWC,KAAK,cAC5B,SAAC1B,EAAD,CAAa0B,KAAK,WAAWC,UAAU,YAEzC,SAACC,EAAA,EAAD,CAAQH,KAAK,SAAb,SAAsB,WAAgB,KACtC,UAAC7B,EAAD,WAAM,yBACmB,KACvB,SAACC,EAAD,CAAYgC,GAAI,YAAhB,SAA6B,qBAInC,SAAC,KAAD,CACEC,aAAc,CACZC,MAAO,CACLC,IAAK,OACLC,WAAY,WAEdC,MAAO,CACLC,SAAU,IACVC,MAAM,SAACjC,EAAD,UAMjB,C,uHC9EYkC,EAAUpD,EAAAA,GAAAA,QAAH,0EACE,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOgD,WAAnB,IAIVC,EAAUtD,EAAAA,GAAAA,IAAH,qGAMPuD,EAAQvD,EAAAA,GAAAA,GAAH,2OAOLwD,GAAaxD,EAAAA,EAAAA,IAAOyD,EAAAA,IAAPzD,CAAH,gGAIb,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,UAAnB,I,SCtBHmB,EAAc6B,EAAQ,MAAtB7B,UAkBR,EAhBc,WACZ,OACE,SAACuB,EAAD,WACE,SAAC,IAAD,WACE,UAACE,EAAD,YACE,4BACE,SAACC,EAAD,UAAO,8BACP,SAAC1B,EAAD,QAEF,SAAC2B,EAAD,UAKT,C","sources":["Components/LoginForm/LoginForm.styled.js","Components/LoginForm/LoginForm.jsx","Pages/Login/Login.styled.js","Pages/Login/Login.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Form, ErrorMessage } from 'formik';\nimport { BsDashCircleFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 25px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  color: ${p => p.theme.colors.titleText};\n  & > input {\n    padding: 15px;\n    font-size: 16px;\n    color: ${p => p.theme.colors.secondaryText};\n    border: 1px solid ${p => p.theme.colors.lightBckg};\n    border-radius: 10px;\n    box-shadow: 1px 3px 5px 0px ${p => p.theme.colors.lightBckg};\n    &:focus {\n      outline: none;\n      border-color: ${p => p.theme.colors.accentBckg};\n      box-shadow: 0px 2px 5px 0px ${p => p.theme.colors.secondBckg};\n    }\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentText};\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.subTitleText};\n  font-size: 16px;\n`;\n\nexport const ErrorIcon = styled(BsDashCircleFill)`\n  height: 50px;\n  width: 50px;\n  fill: red;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'Components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  Label,\n  StyledForm,\n  StyledLink,\n  Text,\n  StyledError,\n  ErrorIcon,\n} from './LoginForm.styled';\nimport { Toaster } from 'react-hot-toast';\n\nconst RegisterSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address. The @ symbol is required')\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      'Please enter a valid email address. Only alphanumeric characters, underscores, periods, hyphens, and the @ symbol are allowed'\n    )\n    .required('Email is a required!'),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters.')\n    .max(255)\n    .required('Password is a required!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, actions) => {\n    actions.resetForm();\n    dispatch(logIn({ email, password }));\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n      >\n        <StyledForm>\n          <Label>\n            Email\n            <Field type=\"email\" name=\"email\" />\n            <StyledError name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Password\n            <Field type=\"password\" name=\"password\" />\n            <StyledError name=\"password\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\">Log In</Button>{' '}\n          <Text>\n            Don't have an account?{' '}\n            <StyledLink to={'/register'}>Sign up</StyledLink>\n          </Text>\n        </StyledForm>\n      </Formik>\n      <Toaster\n        toastOptions={{\n          style: {\n            gap: '10px',\n            background: '#FFFEF9',\n          },\n          error: {\n            duration: 5000,\n            icon: <ErrorIcon />,\n          },\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { IoIosPhonePortrait } from 'react-icons/io';\n\nexport const Section = styled.section`\n  background-color: ${p => p.theme.colors.primaryBckg};\n  padding: 120px 20px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 28px;\n  font-weight: 500;\n  margin-bottom: 30px;\n`;\nexport const StyledIcon = styled(IoIosPhonePortrait)`\n  position: relative;\n  width: 450px;\n  height: 450px;\n  fill: ${p => p.theme.colors.secondBckg};\n`;\n","import { Container } from 'Components/Container.styled';\nimport { Section, StyledIcon, Title, Wrapper } from './Login.styled';\n\nconst { LoginForm } = require('Components/LoginForm/LoginForm');\n\nconst Login = () => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <div>\n            <Title>Please login to continue</Title>\n            <LoginForm />\n          </div>\n          <StyledIcon />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["StyledForm","styled","Form","Label","p","theme","colors","titleText","secondaryText","lightBckg","accentBckg","secondBckg","Text","StyledLink","Link","accentText","StyledError","ErrorMessage","subTitleText","ErrorIcon","BsDashCircleFill","RegisterSchema","Yup","shape","email","matches","required","password","min","max","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","resetForm","logIn","handleSubmit","type","name","component","Button","to","toastOptions","style","gap","background","error","duration","icon","Section","primaryBckg","Wrapper","Title","StyledIcon","IoIosPhonePortrait","require"],"sourceRoot":""}