{"version":3,"file":"static/js/435.fec0b1ac.chunk.js","mappings":"6NAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAInBC,EAAc,SAAAF,GAAK,OAAIA,EAAMC,SAASE,QAAnB,EAEnBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAEhBC,EAAiB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,WAAnB,E,iDCLtBC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gMAYVE,EAAQF,EAAAA,GAAAA,MAAH,iWAIP,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IAIC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,aAAnB,IACU,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAES,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAGC,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAAnB,IAIxBC,GAAcV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,2DACb,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,YAAnB,I,6BCxBNC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KACHG,OACAC,IAAI,EAAG,sCACPC,IAAI,GAAI,sCACRC,QACC,iSACA,gEAEDC,SAAS,uBACZC,OAAQR,EAAAA,KACLI,IAAI,EAAG,wCACPC,IAAI,GAAI,sCACRC,QACC,kFACA,gGAEDC,SAAS,2BAqFd,EAlFoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXhC,GAAWiC,EAAAA,EAAAA,IAAYnC,GACvBI,GAAW+B,EAAAA,EAAAA,IAAYhC,GAkC7B,OACE,iCACE,SAAC,KAAD,CACEiC,cAAe,CACbV,KAAM,GACNM,OAAQ,IAEVK,iBAAkBd,EAClBe,SAAU,SAACC,EAAYC,IAxCR,SAACD,EAAYC,GAChC,IAAMC,EAAUF,EAAWb,KACrBgB,EAAYH,EAAWP,OACvBW,EAAazC,EAAS0C,MAC1B,qBAAGlB,KAAgBmB,cAAclB,SAAWc,EAAQI,cAAclB,MAAlE,IAEImB,EAAe5C,EAAS0C,MAAK,qBAAGZ,SAAwBU,CAA3B,IAE/BC,GACFI,EAAAA,EAAAA,IAAM,gFAOJD,GACFC,EAAAA,EAAAA,IAAM,wEAKRd,GACEe,EAAAA,EAAAA,IAAY,CACVtB,KAAMe,EACNT,OAAQU,KAIZF,EAAQS,YACT,CAWOC,CAAaX,EAAYC,EAC1B,EARH,UAUE,UAAC/B,EAAD,CAAY0C,aAAa,MAAzB,WACE,UAACvC,EAAD,WAAO,QAEL,SAAC,KAAD,CAAOc,KAAK,OAAO0B,KAAK,UACxB,SAAChC,EAAD,CAAaM,KAAK,OAAO2B,UAAU,YAErC,UAACzC,EAAD,WAAO,UAEL,SAAC,KAAD,CAAOc,KAAK,SAAS0B,KAAK,SAC1B,SAAChC,EAAD,CAAaM,KAAK,SAAS2B,UAAU,YAEvC,SAACC,EAAA,EAAD,CAAQF,KAAK,SAASG,SAAUnD,EAAhC,SACGA,GACC,SAAC,KAAD,CACEoD,OAAO,OACPC,MAAM,OACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAGX,sBAKR,SAAC,KAAD,MAGL,EC7GGC,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQlD,MAAK,SAAUyC,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASI,WAAa,WACpB,OAAOtB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASK,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAItF,MAAQ,WAAa,YAAcsF,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOjB,UAAUtB,OAAQwC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKnB,UAAUmB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQrB,UAAUtB,OAAQ2B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAAStB,UAAUsB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBpC,GAGdqC,EAAatB,EAAMR,MAQvB,GAN0B,kBAAf8B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMR,OAGK,oBAAf8B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQf,WAAM,EAAQ,CAAC,WAG9C,OAFAuB,IAEOG,EAAW1B,MAAM,KAAMD,UAC/B,GAAEgC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTxD,EAAS4B,EAAa5B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BuD,EAAOC,KAAK7B,EAAa3B,GAAGsB,MAAM,KAAMD,YAK1C,OADAuB,EAAcQ,EAAmB9B,MAAM,KAAMiC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,sBAAIA,EAAgCL,EAAsBjD,GCjGpD2E,EAAwBrB,EACnC,CALkB,SAAAsB,GAAK,OAAIA,EAAM9I,SAASA,QAAnB,EAEA,SAAA8I,GAAK,OAAIA,EAAMC,OAAOzD,KAAjB,IAI5B,SAACtF,EAAU+I,GACT,OAAO/I,EAAS+I,QAAO,qBAAGvH,KACnBmB,cAAcqG,SAASD,EAAOpG,cADd,GAGxB,I,UCVUsG,EAAWzI,EAAAA,GAAAA,IAAH,iQAMU,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOqI,UAAnB,IAQnBC,EAAa3I,EAAAA,GAAAA,IAAH,+GAOV4I,EAAO5I,EAAAA,GAAAA,EAAH,4OAMN,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,YAAnB,IAGCiI,EAAc7I,EAAAA,GAAAA,EAAH,uCACb,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,aAAnB,ICzBCuI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMpJ,GAAc2B,EAAAA,EAAAA,IAAY5B,GAE1B0B,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAACiH,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,UAAOG,EAAQ/H,QACf,UAAC4H,EAAD,WAAM,WAEJ,SAACC,EAAD,CAAaM,KAAI,cAASJ,EAAQzH,QAAlC,SACGyH,EAAQzH,gBAIf,SAACsB,EAAA,EAAD,CAAQwG,QAfS,WACnBF,EAAaH,EAAQM,IACrB9H,GAAS+H,EAAAA,EAAAA,IAAeP,EAAQM,IACjC,EAYG,SACGvJ,GAAemJ,IAAcF,EAAQM,IACpC,SAAC,KAAD,CACEvG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAGX,aAKT,EC5CYkG,EAAOvJ,EAAAA,GAAAA,GAAH,2FAMJwJ,EAAOxJ,EAAAA,GAAAA,GAAH,sICHJyJ,EAAc,WACzB,IAAMC,GAAkBjI,EAAAA,EAAAA,IAAY4G,GAEpC,OACE,SAACkB,EAAD,UACGG,EAAgBlD,KAAI,SAAAuC,GAAO,OAC1B,SAACS,EAAD,WACE,SAACV,EAAD,CAAaC,QAASA,KADbA,EAAQM,GADO,KAOjC,E,UCXYnJ,IAJUF,EAAAA,GAAAA,IAAH,6CAICA,EAAAA,GAAAA,MAAH,0YAMP,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IAIC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,aAAnB,IACU,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAES,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,SAAnB,IAGC,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,UAAnB,KCLrC,GAde,WACb,IAAMc,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,GAAD,WAAO,yBAEL,kBACEkB,KAAK,OACLiH,SAAU,SAAAC,GAAG,OAAIrI,GAASsI,EAAAA,EAAAA,IAAUD,EAAIE,OAAOhF,OAAlC,MAIpB,E,WCbYiF,GAAU/J,EAAAA,GAAAA,QAAH,8EAEE,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAO2J,WAAnB,IAGVC,GAAWjK,EAAAA,GAAAA,GAAH,oLAMV,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,YAAnB,IAGCsJ,GAAclK,EAAAA,GAAAA,EAAH,gDCLT,SAASmK,KACtB,IAAM5I,GAAWC,EAAAA,EAAAA,MACX5B,GAAQ6B,EAAAA,EAAAA,IAAY9B,GACpBH,GAAWiC,EAAAA,EAAAA,IAAYnC,GAM7B,OAJA8K,EAAAA,EAAAA,YAAU,WACR7I,GAAS8I,EAAAA,EAAAA,MACV,GAAE,CAAC9I,KAGF,UAACwI,GAAD,YACE,UAAC,KAAD,YACE,SAACE,GAAD,UACGzK,EAAS8E,OAAS,EAAI,eAAiB,4BAE1C,SAAC,EAAD,IACC9E,EAAS8E,OAAS,IACjB,iCACE,SAAC2F,GAAD,UAAU,iBACV,SAAC,GAAD,OAGHrK,IAAS,SAACsK,GAAD,UAAa,qCACvB,SAACT,EAAD,QAEF,SAAC,KAAD,CACEa,aAAc,CACZC,MAAO,CACLC,IAAK,OACLC,WAAY,WAEdC,QAAS,CACPC,SAAU,IACVC,UAAW,CACTC,QAAS,UACTC,UAAW,iBAOxB,C","sources":["redux/contacts/selectors.js","Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","Components/ContactItem/ContactItem.styled.js","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Pages/Phonebook/Phonebook.styled.js","Pages/Phonebook/Phonebook.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getIsTryAdd = state => state.contacts.isTryAdd;\n\nexport const getError = state => state.contacts.error;\n\nexport const getIsTryDelete = state => state.contacts.isTryDelete;\n","import { Form, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  margin-bottom: 50px;\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  & > button {\n    margin-left: auto;\n    width: 180px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  color: ${p => p.theme.colors.titleText};\n  & > input {\n    padding: 15px;\n    font-size: 16px;\n    color: ${p => p.theme.colors.secondaryText};\n    border: 1px solid ${p => p.theme.colors.lightBckg};\n    border-radius: 10px;\n    box-shadow: 1px 3px 5px 0px ${p => p.theme.colors.lightBckg};\n    &:focus {\n      outline: none;\n      box-shadow: 1px 3px 3px 0px ${p => p.theme.colors.accentBckg};\n    }\n  }\n`;\nexport const StyledError = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.subTitleText};\n  font-size: 16px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getIsTryAdd } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { Button } from 'Components/Button/Button';\nimport { Label, StyledError, StyledForm } from './ContactForm.styled';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Name must be at least 2 characters')\n    .max(50, 'Name must be at most 50 characters')\n    .matches(\n      /^(?:(?!^\\s+$)[\\sa-zA-Zа-яА-ЯґҐєЄіІїЇ]+((['-][\\sa-zA-Zа-яА-ЯґҐєЄіІїЇ]+)([ ]?[\\sa-zA-Zа-яА-ЯґҐєЄіІїЇ]+))*)?$/,\n      'Name may only contain letters, dashes, apostrophes or spaces'\n    )\n    .required('Name is a required!'),\n  number: Yup.string()\n    .min(5, 'Number must be at least 5 characters')\n    .max(20, 'Name must be at most 20 characters')\n    .matches(\n      /^(?:\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9})?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Number is a required!'),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isTryAdd = useSelector(getIsTryAdd);\n\n  const handleSubmit = (formValues, actions) => {\n    const newName = formValues.name;\n    const newNumber = formValues.number;\n    const isSameName = contacts.find(\n      ({ name }) => name.toLowerCase().trim() === newName.toLowerCase().trim()\n    );\n    const isSameNumber = contacts.find(({ number }) => number === newNumber);\n\n    if (isSameName) {\n      toast(\n        `Contact with this name already exists.\n        Please use a different name.`\n      );\n\n      return;\n    }\n    if (isSameNumber) {\n      toast(\n        `Contact with this number already exists. Please enter a new number.`\n      );\n      return;\n    }\n    dispatch(\n      addContacts({\n        name: newName,\n        number: newNumber,\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={(formValues, actions) => {\n          handleSubmit(formValues, actions);\n        }}\n      >\n        <StyledForm autoComplete=\"off\">\n          <Label>\n            Name\n            <Field name=\"name\" type=\"text\" />\n            <StyledError name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Number\n            <Field name=\"number\" type=\"tel\" />\n            <StyledError name=\"number\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\" disabled={isTryAdd}>\n            {isTryAdd ? (\n              <ThreeDots\n                height=\"20px\"\n                width=\"40px\"\n                radius=\"9\"\n                color=\"#F3C653\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n              />\n            ) : (\n              'Add contact'\n            )}\n          </Button>\n        </StyledForm>\n      </Formik>\n      <Toaster />\n    </>\n  );\n};\nexport default ContactForm;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = store => store.contacts.contacts;\n\nexport const getFilter = store => store.filter.value;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ItemWrap = styled.div`\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  box-shadow: 0 4px 6px -6px ${p => p.theme.colors.secondBckg};\n  & > button {\n    font-size: 18px;\n    width: 85px;\n    padding: 10px 15px;\n  }\n`;\n\nexport const BoxContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 15px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  gap: 8px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 20px;\n  color: ${p => p.theme.colors.subTitleText};\n`;\n\nexport const ContactLink = styled.a`\n  color: ${p => p.theme.colors.secondaryText};\n`;\n","import { Button } from 'Components/Button/Button';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { getIsTryDelete } from 'redux/contacts/selectors';\nimport { ItemWrap, BoxContact, ContactLink, Text } from './ContactItem.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const ContactItem = ({ contact }) => {\n  const [currentId, setCurrentId] = useState(null);\n  const isTryDelete = useSelector(getIsTryDelete);\n\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    setCurrentId(contact.id);\n    dispatch(deleteContacts(contact.id));\n  };\n  return (\n    <ItemWrap>\n      <BoxContact>\n        <Text>{contact.name}</Text>\n        <Text>\n          number:\n          <ContactLink href={`tel:${contact.number}`}>\n            {contact.number}\n          </ContactLink>\n        </Text>\n      </BoxContact>\n      <Button onClick={handleDelete}>\n        {isTryDelete && currentId === contact.id ? (\n          <ThreeDots\n            height=\"20\"\n            width=\"40\"\n            radius=\"9\"\n            color=\"#F3C653\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          'Delete'\n        )}\n      </Button>\n    </ItemWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n\n  margin-bottom: 10px;\n  width: 500px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/filter/selectors';\nimport { ContactItem } from 'Components/ContactItem/ContactItem';\nimport { Item, List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Item key={contact.id}>\n          <ContactItem contact={contact} />\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 100px 0;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 350px;\n  color: ${p => p.theme.colors.titleText};\n  & > input {\n    padding: 15px;\n    font-size: 16px;\n    color: ${p => p.theme.colors.secondaryText};\n    border: 1px solid ${p => p.theme.colors.lightBckg};\n    border-radius: 10px;\n    box-shadow: 1px 3px 5px 0px ${p => p.theme.colors.lightBckg};\n    &:focus {\n      outline: none;\n      box-shadow: 1px 3px 3px 0px ${p => p.theme.colors.accentBckg};\n    }\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { Label } from './Filter.styled';\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 150px 0 50px 0;\n  background-color: ${p => p.theme.colors.primaryBckg};\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 25px;\n  font-family: 'Times New Roman', Times, serif;\n  font-weight: 500;\n  font-size: 32px;\n  letter-spacing: 0.06em;\n  color: ${p => p.theme.colors.subTitleText};\n`;\n\nexport const RequestInfo = styled.p`\n  margin-bottom: 30px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getError } from 'redux/contacts/selectors';\nimport ContactForm from '../../Components/ContactForm/ContactForm';\nimport { ContactList } from '../../Components/ContactList/ContactList';\nimport Filter from '../../Components/Filter/Filter';\nimport { Container } from 'Components/Container.styled';\nimport { RequestInfo, Section, SubTitle } from './Phonebook.styled';\nimport { Toaster } from 'react-hot-toast';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <SubTitle>\n          {contacts.length > 0 ? 'New contacts' : 'Add your first contact'}\n        </SubTitle>\n        <ContactForm />\n        {contacts.length > 0 && (\n          <>\n            <SubTitle>My contacts</SubTitle>\n            <Filter />\n          </>\n        )}\n        {error && <RequestInfo>Something went wrong. Try again</RequestInfo>}\n        <ContactList />\n      </Container>\n      <Toaster\n        toastOptions={{\n          style: {\n            gap: '10px',\n            background: '#FFFEF9',\n          },\n          success: {\n            duration: 1000,\n            iconTheme: {\n              primary: '#F3C653',\n              secondary: '#FFFEF9',\n            },\n          },\n        }}\n      />\n    </Section>\n  );\n}\n"],"names":["getContacts","state","contacts","getIsTryAdd","isTryAdd","getError","error","getIsTryDelete","isTryDelete","StyledForm","styled","Form","Label","p","theme","colors","titleText","secondaryText","lightBckg","accentBckg","StyledError","ErrorMessage","subTitleText","RegisterSchema","Yup","shape","name","trim","min","max","matches","required","number","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","formValues","actions","newName","newNumber","isSameName","find","toLowerCase","isSameNumber","toast","addContacts","resetForm","handleSubmit","autoComplete","type","component","Button","disabled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectVisibleContacts","store","filter","includes","ItemWrap","secondBckg","BoxContact","Text","ContactLink","ContactItem","contact","useState","currentId","setCurrentId","href","onClick","id","deleteContacts","List","Item","ContactList","visibleContacts","onChange","evt","setFilter","target","Section","primaryBckg","SubTitle","RequestInfo","Phonebook","useEffect","fetchContacts","toastOptions","style","gap","background","success","duration","iconTheme","primary","secondary"],"sourceRoot":""}